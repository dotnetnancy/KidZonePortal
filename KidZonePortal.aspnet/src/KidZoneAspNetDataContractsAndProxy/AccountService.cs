//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.ServiceModel.Web;
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IAccountService")]
public interface IAccountService
{
    [WebInvoke(BodyStyle = WebMessageBodyStyle.WrappedRequest)]
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/DoesUsernameExist", ReplyAction="http://tempuri.org/IAccountService/DoesUsernameExistResponse")]
    bool DoesUsernameExist(string username);

    [WebInvoke(BodyStyle = WebMessageBodyStyle.WrappedRequest)]
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/LoginUser", ReplyAction="http://tempuri.org/IAccountService/LoginUserResponse")]
    bool LoginUser(string username, string password);

    [WebInvoke(BodyStyle = WebMessageBodyStyle.WrappedRequest)]
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AccountCreate", ReplyAction="http://tempuri.org/IAccountService/AccountCreateResponse")]
    bool AccountCreate(TestSprocGenerator.Business.SingleTable.Bo.Account accountModel);

    [WebInvoke(BodyStyle = WebMessageBodyStyle.WrappedRequest)]
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AccountDeleteByCriteria", ReplyAction="http://tempuri.org/IAccountService/AccountDeleteByCriteriaResponse")]
    bool AccountDeleteByCriteria(TestSprocGenerator.Business.SingleTable.Bo.Account accountModel);

    [WebInvoke(BodyStyle = WebMessageBodyStyle.WrappedRequest)]
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AccountDeleteByPrimaryKey", ReplyAction="http://tempuri.org/IAccountService/AccountDeleteByPrimaryKeyResponse")]
    bool AccountDeleteByPrimaryKey(System.Guid accountID);

    [WebInvoke(BodyStyle = WebMessageBodyStyle.WrappedRequest)]
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AccountUpdate", ReplyAction="http://tempuri.org/IAccountService/AccountUpdateResponse")]
    bool AccountUpdate(TestSprocGenerator.Business.SingleTable.Bo.Account accountModel);

    [WebInvoke(BodyStyle = WebMessageBodyStyle.WrappedRequest)]
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AccountRetrieveByCriteria", ReplyAction="http://tempuri.org/IAccountService/AccountRetrieveByCriteriaResponse")]
    TestSprocGenerator.Business.SingleTable.Bo.Account[] AccountRetrieveByCriteria(TestSprocGenerator.Business.SingleTable.Bo.Account accountModel);

    [WebInvoke(BodyStyle = WebMessageBodyStyle.WrappedRequest)]
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AccountRetrieveByUsernameAndPassword", ReplyAction="http://tempuri.org/IAccountService/AccountRetrieveByUsernameAndPasswordResponse")]
    TestSprocGenerator.Business.SingleTable.Bo.Account AccountRetrieveByUsernameAndPassword(string username, string password);

    [WebInvoke(BodyStyle = WebMessageBodyStyle.WrappedRequest)]
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ResetPasswordRequest", ReplyAction="http://tempuri.org/IAccountService/ResetPasswordRequestResponse")]
    string ResetPasswordRequest(string username, string email);

    [WebInvoke(BodyStyle = WebMessageBodyStyle.WrappedRequest)]
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SendTestEmail", ReplyAction="http://tempuri.org/IAccountService/SendTestEmailResponse")]
    bool SendTestEmail(string email);

    [WebInvoke(BodyStyle = WebMessageBodyStyle.WrappedRequest)]
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ResetPassword", ReplyAction="http://tempuri.org/IAccountService/ResetPasswordResponse")]
    bool ResetPassword(string username, string email, string passwordResetRequestCode, string newPassword);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IAccountServiceChannel : IAccountService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class AccountServiceClient : System.ServiceModel.ClientBase<IAccountService>, IAccountService
{
    
    public AccountServiceClient()
    {
    }
    
    public AccountServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public AccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public AccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public AccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public bool DoesUsernameExist(string username)
    {
        return base.Channel.DoesUsernameExist(username);
    }
    
    public bool LoginUser(string username, string password)
    {
        return base.Channel.LoginUser(username, password);
    }
    
    public bool AccountCreate(TestSprocGenerator.Business.SingleTable.Bo.Account accountModel)
    {
        return base.Channel.AccountCreate(accountModel);
    }
    
    public bool AccountDeleteByCriteria(TestSprocGenerator.Business.SingleTable.Bo.Account accountModel)
    {
        return base.Channel.AccountDeleteByCriteria(accountModel);
    }
    
    public bool AccountDeleteByPrimaryKey(System.Guid accountID)
    {
        return base.Channel.AccountDeleteByPrimaryKey(accountID);
    }
    
    public bool AccountUpdate(TestSprocGenerator.Business.SingleTable.Bo.Account accountModel)
    {
        return base.Channel.AccountUpdate(accountModel);
    }
    
    public TestSprocGenerator.Business.SingleTable.Bo.Account[] AccountRetrieveByCriteria(TestSprocGenerator.Business.SingleTable.Bo.Account accountModel)
    {
        return base.Channel.AccountRetrieveByCriteria(accountModel);
    }
    
    public TestSprocGenerator.Business.SingleTable.Bo.Account AccountRetrieveByUsernameAndPassword(string username, string password)
    {
        return base.Channel.AccountRetrieveByUsernameAndPassword(username, password);
    }
    
    public string ResetPasswordRequest(string username, string email)
    {
        return base.Channel.ResetPasswordRequest(username, email);
    }
    
    public bool SendTestEmail(string email)
    {
        return base.Channel.SendTestEmail(email);
    }
    
    public bool ResetPassword(string username, string email, string passwordResetRequestCode, string newPassword)
    {
        return base.Channel.ResetPassword(username, email, passwordResetRequestCode, newPassword);
    }
}
