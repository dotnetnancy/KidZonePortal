<?xml version="1.0"?>

<configuration> 


  <configSections>

    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>

  </configSections>

  <log4net>

    <!-- The DebugFileAppender writes all messages to a log file-->

    <appender name="DebugFileAppender" type="log4net.Appender.FileAppender">

      <file value="AccountServiceWCF.log" />

      <threshold value="DEBUG" />

      <appendToFile value="true" />

      <layout type="log4net.Layout.PatternLayout">

        <param name="ConversionPattern" value="%5p [%d] - %m%n" />

      </layout>

    </appender>

    <!-- The EmailAppender sends an email when something matches the filters-->

    <appender name="EmailAppender" type="log4net.Appender.SmtpAppender">

      <evaluator type="log4net.Core.LevelEvaluator">

        <threshold value="DEBUG"/>

      </evaluator>

      <!-- The filters are processed in order: 

1) match the Inserted New User message

2) match any WARN or higher messages

3) reject everything else -->

      <filter type="log4net.Filter.StringMatchFilter">

        <stringToMatch value="Inserted a new user" />

        <acceptOnMatch value="true" />

      </filter>

      <filter type="log4net.Filter.LevelRangeFilter">

        <levelMin value="WARN" />

        <acceptOnMatch value="true" />

      </filter>

      <filter type="log4net.Filter.DenyAllFilter" />

      <!-- The SmtpAppender authenticates against the mail server, the buffersize of 10 provides 10 lines 

of context when an error happens. -->

      <subject value="LinkedCells: Production log event" />

      <to value="notifications@LinkedCells.com" />

      <from value="notifications@LinkedCells.com" />

      <password value ="password" />

      <smtpHost value="MAILSERVER" />

      <bufferSize value="10" />

      <lossy value="true" />

      <layout type="log4net.Layout.PatternLayout">

        <param name="ConversionPattern" value="%5p [%d] - %m%n" />

      </layout>

    </appender>

    <root>

      <!-- add other appenders here and the log messages will be sent to every listed appender -->

      <appender-ref ref="DebugFileAppender" />

      <!--<appender-ref ref="EmailAppender" />-->

    </root>

  </log4net>

  <connectionStrings>
    <add name="KidZonePortalDatabase" connectionString="Server=WIN-3AHR7ERVN41\NI;Database=KidZonePortal;User ID=KidZonePortalUser;Password=my$h0wcas3;Trusted_Connection=False;"/>
    <add name="CityCountryStateProvinceDatabase" connectionString="Server=WIN-3AHR7ERVN41\NI;Database=countrystatecitydb;User ID=KidZonePortalUser;Password=my$h0wcas3;Trusted_Connection=False;"/>

  </connectionStrings>

  <system.web>
    <compilation debug="true" targetFramework="4.0" />
    <httpRuntime executionTimeout="300"/>
  </system.web>

  <system.serviceModel>

    <behaviors>
      <serviceBehaviors>
        <behavior name="MyServiceTypeBehaviors" >
          <serviceMetadata httpGetEnabled="true" />
          <dataContractSerializer maxItemsInObjectGraph="2147483647" />
        </behavior>       
        
        
      </serviceBehaviors>
    </behaviors>

    <bindings>
      <basicHttpBinding>
       
        <binding name="myBindingConfiguration2" closeTimeout="00:02:00" />
        <binding closeTimeout="00:03:00" />
        
      </basicHttpBinding>
    </bindings>
    <services>
      <service name="CountryCityProvinceService.CountryCityProvinceService" behaviorConfiguration="MyServiceTypeBehaviors">
        <endpoint
           address="http://localhost/CountryCityProvinceService/CountryCityProvinceService.svc" binding="basicHttpBinding"
           bindingConfiguration="myBindingConfiguration2"
           contract="CountryCityProvinceService.ICountryCityProvinceService"  
           />

        <endpoint contract="IMetadataExchange" binding="mexHttpBinding" address="mex" />


      </service>
    </services>
    
    
  </system.serviceModel>


  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
  </system.webServer>

  <system.diagnostics>
  <sources>
    <source name="System.ServiceModel" switchValue="All"
      propagateActivity="true">
      <listeners>
        <add name="xml" />
      </listeners>
    </source>
    <source name="System.ServiceModel.MessageLogging">
      <listeners>
        <add name="xml" />
      </listeners>
    </source>
  </sources>
  <sharedListeners>
    <add initializeData="G:\log\Traces.svclog" type="System.Diagnostics.XmlWriterTraceListener"
      name="xml" />
  </sharedListeners>
  <trace autoflush="true" />
  </system.diagnostics>




</configuration>
