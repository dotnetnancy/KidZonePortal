//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3623
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestSprocGenerator.SingleTable.List
{
    using System;
    using System.Collections.Generic;
    using System.Data;
    using System.Data.SqlClient;
    using System.Text;
    using CommonLibrary.Base.Database;
    using CountryCityProvinceDataLayer;
    
    [DataContract]
    [CommonLibrary.CustomAttributes.TableNameAttribute("Country")]
    public class Country : List<TestSprocGenerator.Data.SingleTable.Dto.Country>
    {
        
        private CommonLibrary.Base.Database.BaseDatabase _baseDatabase = new CommonLibrary.Base.Database.BaseDatabase();
        
        public Country(System.Data.SqlClient.SqlDataReader reader)
        {
            this.AddItemsToListBySqlDataReader(reader);
        }
        
        public Country()
        {
        }
        
        public virtual void AddItemsToListBySqlDataReader(System.Data.SqlClient.SqlDataReader reader)
        {
        
            TestSprocGenerator.Data.SingleTable.Dto.Country dto;
                using(reader)
                {

                while(reader.Read())
                {
            dto = new TestSprocGenerator.Data.SingleTable.Dto.Country();
                    dto.Abbreviation = 
                    _baseDatabase.resolveNullString(reader.GetOrdinal("Abbreviation"), reader);
                    dto.Name = 
                    _baseDatabase.resolveNullString(reader.GetOrdinal("Name"), reader);
                    dto.TwoCharISOCode = 
                    _baseDatabase.resolveNullChar(reader.GetOrdinal("TwoCharISOCode"), reader);
                    dto.ThreeCharISOCode = 
                    _baseDatabase.resolveNullString(reader.GetOrdinal("ThreeCharISOCode"), reader);
                    dto.CreatedBy =
                    _baseDatabase.retrieveNullableGuidFromDataReader(reader.GetOrdinal("CreatedBy"), reader);
                    dto.CreatedDate = 
                    _baseDatabase.resolveNullDateTime(reader.GetOrdinal("CreatedDate"), reader);
                    dto.UpdatedBy =
                    _baseDatabase.retrieveNullableGuidFromDataReader(reader.GetOrdinal("UpdatedBy"), reader);
                    dto.UpdatedDate = 
                    _baseDatabase.resolveNullDateTime(reader.GetOrdinal("UpdatedDate"), reader);
                    dto.CountryID = 
                    _baseDatabase.resolveNullSmallInt(reader.GetOrdinal("CountryID"), reader);
                    this.Add(dto);
                }

                }

        }
    }
}
