<?xml version="1.0" encoding="UTF-8"?>

<configuration>

  <configSections>

    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />

  </configSections>

  <log4net>

    <!-- The DebugFileAppender writes all messages to a log file-->

    <appender name="DebugFileAppender" type="log4net.Appender.FileAppender">

      <file value="AccountServiceWCF.log" />

      <threshold value="DEBUG" />

      <appendToFile value="true" />

      <layout type="log4net.Layout.PatternLayout">

        <param name="ConversionPattern" value="%5p [%d] - %m%n" />

      </layout>

    </appender>

    <!-- The EmailAppender sends an email when something matches the filters-->

    <appender name="EmailAppender" type="log4net.Appender.SmtpAppender">

      <evaluator type="log4net.Core.LevelEvaluator">

        <threshold value="DEBUG" />

      </evaluator>

      <!-- The filters are processed in order: 

1) match the Inserted New User message

2) match any WARN or higher messages

3) reject everything else -->

      <filter type="log4net.Filter.StringMatchFilter">

        <stringToMatch value="Inserted a new user" />

        <acceptOnMatch value="true" />

      </filter>

      <filter type="log4net.Filter.LevelRangeFilter">

        <levelMin value="WARN" />

        <acceptOnMatch value="true" />

      </filter>

      <filter type="log4net.Filter.DenyAllFilter" />

      <!-- The SmtpAppender authenticates against the mail server, the buffersize of 10 provides 10 lines 

of context when an error happens. -->

      <subject value="LinkedCells: Production log event" />

      <to value="notifications@LinkedCells.com" />

      <from value="notifications@LinkedCells.com" />

      <password value="password" />

      <smtpHost value="MAILSERVER" />

      <bufferSize value="10" />

      <lossy value="true" />

      <layout type="log4net.Layout.PatternLayout">

        <param name="ConversionPattern" value="%5p [%d] - %m%n" />

      </layout>

    </appender>

    <root>

      <!-- add other appenders here and the log messages will be sent to every listed appender -->

      <appender-ref ref="DebugFileAppender" />

      <!--<appender-ref ref="EmailAppender" />-->

    </root>

  </log4net>

  <connectionStrings>
    <add name="KidZonePortalDatabase" connectionString="Server=WIN-3AHR7ERVN41\NI;Database=KidZonePortal;User ID=KidZonePortalUser;Password=my$h0wcas3;Trusted_Connection=False;" />
    <add name="CityCountryStateProvinceDatabase" connectionString="Server=WIN-3AHR7ERVN41\NI;Database=countrystatecitydb;User ID=KidZonePortalUser;Password=my$h0wcas3;Trusted_Connection=False;" />

  </connectionStrings>

  <system.web>
    <compilation debug="true" targetFramework="4.0" />
    <!--<identity impersonate="true"/>-->
  </system.web>

  <system.net>
    <mailSettings>
      <smtp deliveryMethod="PickupDirectoryFromIis">
        <network host="(localhost)" port="25" defaultCredentials="true" />
      </smtp>
    </mailSettings>
  </system.net>
  
  
  <!--<system.serviceModel>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          -->
  
  <!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment --><!--
          <serviceMetadata httpGetEnabled="true" />
          -->
  
  <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information --><!--
          <serviceDebug includeExceptionDetailInFaults="true" />
          
        </behavior>
     
       
          <behavior name="E.W.CustomerBehavior">
            <serviceMetadata httpGetEnabled="true" />
            
          </behavior>
        </serviceBehaviors>
        <endpointBehaviors>
          <behavior name="webCallable">
            <webHttp />
          </behavior>
        </endpointBehaviors>
      </behaviors>

      <services>
        <service behaviorConfiguration="E.W.CustomerBehavior" name="E.W.Customer">
          <endpoint address="http://localhost/AccountService/AccountService.svc" 
                    binding="webHttpBinding" contract="IAccountService" 
                    behaviorConfiguration="webCallable">
            <identity>
              <dns value="localhost" />
            </identity>
          </endpoint>
          <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        </service>
      </services>


    
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" />
  </system.serviceModel>-->

  

  <system.serviceModel>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" />
    <behaviors>
      <endpointBehaviors>

        <behavior name="webHttpEnablingBehaviour">

          <webHttp />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>

        <behavior name="webHttpEnablingBehaviour">
          <serviceMetadata httpGetEnabled="true" />
        </behavior>

      </serviceBehaviors>
    </behaviors>
    <services>
      <service name="AccountService.AccountService" behaviorConfiguration="webHttpEnablingBehaviour">
        <endpoint contract="IMetadataExchange" binding="mexHttpBinding" address="mex" />

        <endpoint address="" binding="webHttpBinding" bindingConfiguration="default" contract="AccountService.IAccountService" behaviorConfiguration="webHttpEnablingBehaviour">
        </endpoint>
        <endpoint address="other" binding="basicHttpBinding" bindingConfiguration="default" contract="AccountService.IAccountService">
        </endpoint>
      </service>

    </services>
    <client />
    <bindings>
      
      <webHttpBinding>
        <binding name="default"></binding>
      </webHttpBinding>
      
      <basicHttpBinding>
        <binding name="default" allowCookies="true"></binding>
      </basicHttpBinding>
      
    </bindings>
  </system.serviceModel>
  
  
  
 <system.webServer>
    <modules runAllManagedModulesForAllRequests="true" />
        <directoryBrowse enabled="true" />
  </system.webServer>

  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel" switchValue="All" propagateActivity="true">
        <listeners>
          <add name="xml" />
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging">
        <listeners>
          <add name="xml" />
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData="G:\log\Traces.svclog" type="System.Diagnostics.XmlWriterTraceListener" name="xml" />
    </sharedListeners>
    <trace autoflush="true" />
  </system.diagnostics>
  
  
</configuration>
