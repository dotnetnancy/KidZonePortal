//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3623
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestSprocGenerator.SingleTable.List
{
    using System;
    using System.Collections.Generic;
    using System.Data;
    using System.Data.SqlClient;
    using System.Text;
    using CommonLibrary.Base.Database;
    
    
    [CommonLibrary.CustomAttributes.TableNameAttribute("ContentAccessRequest")]
    public class ContentAccessRequest : List<TestSprocGenerator.Data.SingleTable.Dto.ContentAccessRequest>
    {
        
        private CommonLibrary.Base.Database.BaseDatabase _baseDatabase = new CommonLibrary.Base.Database.BaseDatabase();
        
        public ContentAccessRequest(System.Data.SqlClient.SqlDataReader reader)
        {
            this.AddItemsToListBySqlDataReader(reader);
        }
        
        public ContentAccessRequest()
        {
        }
        
        public virtual void AddItemsToListBySqlDataReader(System.Data.SqlClient.SqlDataReader reader)
        {
        
            TestSprocGenerator.Data.SingleTable.Dto.ContentAccessRequest dto;
                using(reader)
                {

                while(reader.Read())
                {
            dto = new TestSprocGenerator.Data.SingleTable.Dto.ContentAccessRequest();
                    dto.ContentAccessRequestID = 
                    _baseDatabase.retrieveGuidFromDataReader(reader.GetOrdinal("ContentAccessRequestID"), reader);
                    dto.Approved = 
                    _baseDatabase.resolveNullBoolean(reader.GetOrdinal("Approved"), reader);
                    dto.Deleted = 
                    _baseDatabase.resolveNullBoolean(reader.GetOrdinal("Deleted"), reader);
                    dto.InsertedDateTime = 
                    _baseDatabase.resolveNullDateTime(reader.GetOrdinal("InsertedDateTime"), reader);
                    dto.ModifiedDateTime = 
                    _baseDatabase.resolveNullDateTime(reader.GetOrdinal("ModifiedDateTime"), reader);
                    dto.ProfileIDOtherProfile = 
                    _baseDatabase.retrieveGuidFromDataReader(reader.GetOrdinal("ProfileIDOtherProfile"), reader);
                    dto.ProfileIDParent = 
                    _baseDatabase.retrieveGuidFromDataReader(reader.GetOrdinal("ProfileIDParent"), reader);
                    dto.ProfileIDChild = 
                    _baseDatabase.retrieveGuidFromDataReader(reader.GetOrdinal("ProfileIDChild"), reader);
                    dto.ContentID = 
                    _baseDatabase.retrieveGuidFromDataReader(reader.GetOrdinal("ContentID"), reader);
                    this.Add(dto);
                }

                }

        }
    }
}
